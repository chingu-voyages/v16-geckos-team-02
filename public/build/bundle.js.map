{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/dataStore.js","../../src/components/buttons/Trash.svelte","../../src/components/buttons/Add.svelte","../../src/components/DashNav.svelte","../../src/components/widgets/stickyTypes/Text.svelte","../../src/components/widgets/Sticky.svelte","../../src/utils/detectInputType.js","../../src/components/widgets/Widget.svelte","../../node_modules/svelte-grid/src/utils/other.js","../../node_modules/svelte-grid/src/utils/matrix.js","../../node_modules/svelte-grid/src/utils/item.js","../../node_modules/svelte-grid/src/utils/container.js","../../node_modules/svelte-grid/src/index.svelte","../../node_modules/svelte-grid/build/helper/index.mjs","../../src/components/Dash.svelte","../../src/components/WidgetMenu.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value) {\n    node.style.setProperty(key, value);\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        promise.then(value => {\n            update(info.then, 1, info.value, value);\n        }, error => {\n            update(info.catch, 2, info.error, error);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, value) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, assign, attr, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, debug, destroy_block, destroy_component, destroy_each, detach, dirty_components, each, element, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_slot_changes, get_slot_context, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_input_type, set_now, set_raf, set_style, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n * @param {Stores} stores input stores\n * @param {function(Stores=, function(*)=):*}fn function callback that aggregates the values\n * @param {*=}initial_value when used asynchronously\n */\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import {\r\n    writable\r\n} from 'svelte/store';\r\n\r\nconst dashboards = new Map();\r\nexport const activeDashId = Symbol(); // the first dashboard key\r\nexport const getActiveDash = () => dashboards.get(activeDashId);\r\nexport const getWidget = ref => getActiveDash().widgets.get(ref);\r\n\r\nexport const addDash = (title, ref = Symbol()) => {\r\n    try {\r\n        const dashData = {\r\n            _title: writable(title),\r\n            widgets: new Map(),\r\n            _widgetsCount: writable(0)\r\n        };\r\n        dashboards.set(ref, dashData);\r\n    } catch (e) {\r\n        // TODO decide how to handle the exception\r\n    }\r\n}\r\nexport const addWidget = type => {\r\n    try {\r\n        const widgetData = {\r\n            type,\r\n            sizeAndPos: {w: 2, h: 2, x: 0, y: 0},\r\n            _title: writable(''),\r\n            _data: writable('')\r\n        }\r\n        getActiveDash().widgets.set(Symbol(), widgetData);\r\n        getActiveDash()._widgetsCount.update(n => n + 1);\r\n\r\n    } catch (e) {\r\n        // TODO decide how to handle the exception\r\n    }\r\n}\r\n\r\nexport const removeDash = ref => {\r\n    try {\r\n        dashboards.delete(ref);\r\n    } catch (e) {\r\n        // TODO decide how to handle the exception\r\n    }\r\n}\r\n\r\nexport const removeWidget = (widgetRef, dashRef = activeDashId) => {\r\n    try {\r\n        if(dashboards.get(dashRef).widgets.delete(widgetRef))\r\n        {\r\n            dashboards.get(dashRef)._widgetsCount.update(n => n - 1);\r\n        }\r\n    } catch (e) {\r\n        // TODO decide how to handle the exception\r\n    }\r\n}\r\n\r\nexport const updateDash = (title, ref) => {\r\n    try {\r\n        dashboards.get(ref)._title.set(title);\r\n    } catch (e) {\r\n        // TODO decide how to handle the exception\r\n    }\r\n}\r\n\r\nexport const setWidgetSizeAndPos = (ref, data) => {\r\n    try {\r\n        getActiveDash().widgets.get(ref).sizeAndPos = data;\r\n    } catch (e) {\r\n        // TODO decide how to handle the exception\r\n    }\r\n}\r\n\r\naddDash('default dash', activeDashId);\r\naddWidget('Sticky');\r\naddWidget('Sticky');\r\naddWidget('Sticky');","\r\n<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    export let active = false;\r\n    const dispatch = createEventDispatcher();\r\n    const trash = () => {\r\n        dispatch('trash', {\r\n\t\t\tactive: !active // not sure why this inverts\r\n\t\t});\r\n    } \r\n</script>\r\n\r\n{#if active}\r\n<img class=\"cancel\" on:click={trash} src=\"/images/cancelIcon.svg\" alt=\"x\" />\r\n{/if}\r\n<button class=\"{active ? 'active' : ''}\" on:click={trash}><img src=\"/images/TrashIcon.svg\" alt=\"-\" /></button>\r\n\r\n<style>\r\n\tbutton {\r\n        grid-area: trash;\r\n        min-width: 100%;\r\n        min-height: 100%;\r\n        width: 68px;\r\n        height: 68px;\r\n        border: solid 1px #707070;\r\n        margin: 0;\r\n        background: #ffffff;\r\n    }\r\n    .active {\r\n        background: #707070;\r\n    }\r\n</style>","\r\n<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    export let active = false;\r\n    const dispatch = createEventDispatcher();\r\n    const add = () => dispatch('add');\r\n</script>\r\n\r\n<button class=\"{active ? 'active' : ''}\" on:click={add}>\r\n    <img src=\"/images/addIcon.svg\" alt=\"+\" />\r\n</button>\r\n\r\n<style>\r\n\tbutton {\r\n        grid-area: add;\r\n        min-width: 100%;\r\n        min-height: 100%;\r\n        width: 68px;\r\n        height: 68px;\r\n\r\n        border: solid 1px #707070;\r\n        margin: 0;\r\n        background: none;\r\n    }\r\n    .active {\r\n        background: #707070;\r\n    }\r\n</style>","<script>\r\n    import { getActiveDash } from '../dataStore';\r\n    import Left from './buttons/Left.svelte';\r\n    import Right from './buttons/Right.svelte';\r\n    import Trash from './buttons/Trash.svelte';\r\n    import Add from './buttons/Add.svelte';\r\n    let _title = getActiveDash()._title;\r\n    let editingTitle = false;\r\n</script>\r\n\r\n<nav>\r\n    <Left />\r\n    <Trash />\r\n    <div>\r\n        {#if editingTitle}\r\n            <input bind:value={$_title} on:blur={() => editingTitle = false} type=\"text\" autofocus />\r\n        {:else}\r\n            <a class=\"active-dash-title\" on:click={() => editingTitle = true}>{$_title}</a>\r\n        {/if}\r\n    </div>\r\n    <Add />\r\n    <Right />\r\n</nav>\r\n\r\n<style>\r\nnav {\r\n    display: grid;\r\n    grid-template-columns: auto 70px auto 70px auto 70px auto 70px auto;\r\n    grid-template-areas: \". left . trash bar add . right .\";\r\n    grid-template-rows: 70px auto;\r\n    margin-bottom: 70px;\r\n}\r\ndiv {\r\n    overflow: hidden;\r\n    grid-area: bar;\r\n    border: solid 1px #707070;\r\n    display: flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    justify-content: center; /* will need to change when we add dashes */\r\n}\r\n.active-dash-title, input {\r\n    text-decoration: none;\r\n    color: #707070;\r\n    font-size: 32px;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    min-width: 120px;\r\n    height: 50px;\r\n}\r\n@media only screen and (max-width: 640px) {\r\n    nav {\r\n    display: grid;\r\n    grid-template-columns: auto 70px auto 70px auto 70px auto 70px auto;\r\n    grid-template-areas: \r\n    \". left . trash . add . right .\"\r\n    \". bar bar bar bar bar bar bar .\";\r\n    row-gap: 24px;\r\n    grid-template-rows: 70px 70px auto;\r\n    margin-bottom: 70px;\r\n}\r\n}\r\n</style>","\r\n<script>\r\n\texport let _data;\r\n\tlet editing = true;\r\n</script>\r\n\r\n{#if editing}\r\n\t<textarea bind:value={$_data} on:blur={() => editing = false} autofocus />\r\n{:else}\r\n\t<article on:click={() => editing = true}>{$_data}</article>\r\n{/if}\r\n\r\n<style>\r\n\ttextarea, article {\r\n\t\twidth: 90%;\r\n\t\theight: 100%;\r\n\t\tbackground: none;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\twhite-space: pre-wrap;\r\n\t}\r\n</style>","<script>\r\n    import { getWidget } from '../../dataStore';\r\n    import { beforeUpdate } from 'svelte';\r\n    import Text from './stickyTypes/Text.svelte';\r\n    import detectInputType from '../../utils/detectInputType.js';\r\n    export let _data;\r\n    let type;\r\n    beforeUpdate(() => {\r\n\t\ttype = detectInputType($_data);\r\n\t});\r\n</script>\r\n\r\n{#if type === 'Text'}\r\n    <Text {_data} />\r\n{:else}\r\n    <textarea bind:value={$_data} />\r\n{/if}\r\n\r\n<style>\r\n    textarea {\r\n      width: 90%;\r\n      height: 100%;\r\n    }\r\n</style>\r\n","\r\nexport default function detectInputType(data) {\r\n    if (data && data.length > 0) {\r\n        return 'Text';\r\n    }\r\n    else {\r\n        return undefined\r\n    }\r\n    // TODO after prototype is finished: check first for date, image, link, todo types\r\n}","<script>\r\n    import { getWidget, activeDashId ,removeWidget} from '../../dataStore';\r\n    import Sticky from './Sticky.svelte';\r\n    import Trash from '../buttons/Trash.svelte';\r\n    export let ref;\r\n    let {_title, _data, type} = getWidget(ref);\r\n    let editingTitle = false;\r\n    const removeSelf = () => {\r\n      removeWidget(ref);\r\n    }\r\n</script>\r\n\r\n<div>\r\n  {#if editingTitle}\r\n    <input bind:value={$_title} on:blur={() => editingTitle = false} type=\"text\" autofocus />\r\n  {:else}\r\n    <h2 on:click={() => editingTitle = true}>{$_title}</h2>\r\n  {/if}\r\n  {#if type === 'Sticky'}\r\n      <Sticky {_data} />\r\n      {:else}\r\n      <div>{type} Widget type not yet implemented</div>\r\n  {/if}\r\n  <span><Trash on:trash={removeSelf} /></span>\r\n</div>\r\n\r\n<style>\r\n  div {\r\n    display: grid;\r\n    grid-template-rows: 80px auto;\r\n    place-items: start center;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    padding: 12px;\r\n    box-sizing: border-box;\r\n  }\r\n  h2, input {\r\n    text-decoration: none;\r\n    color: #707070;\r\n    font-size: 32px;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    width: 100%;\r\n    height: 50px;\r\n    background: none;\r\n    font-weight: 400;\r\n  }\r\n  span {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    visibility: hidden;\r\n  }\r\n  :global(.trash) span {\r\n    visibility: visible;\r\n  }\r\n  \r\n</style>\r\n","export const debounce = (fn, ms = 0) => {\n  let timeoutId;\n  return function(...args) {\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(() => fn.apply(this, args), ms);\n  };\n};\n\nexport function getTranslate(str) {\n  str = str.slice(10, -3);\n\n  var getIndex = str.indexOf(\"px, \");\n\n  var x = +str.slice(0, getIndex);\n\n  var y = +str.slice(getIndex + 4);\n  return { x, y };\n}\n\nexport function getCordinates(event) {\n  const pageX = event.changedTouches ? event.changedTouches[0].pageX : event.pageX;\n  const pageY = event.changedTouches ? event.changedTouches[0].pageY : event.pageY;\n  return { pageX, pageY };\n}\n\nexport function getRowsCount(items) {\n  return Math.max(...items.map(val => val.y + val.h), 1);\n}\n\nexport const getColumnFromBreakpoints = (breakpoints, windowWidth, cols, initCols) => {\n  var found = false,\n    tempCols = cols;\n  if (breakpoints) {\n    for (var i = breakpoints.length - 1; i >= 0; i--) {\n      const [resolution, cols] = breakpoints[i];\n\n      if (windowWidth <= resolution) {\n        found = true;\n        tempCols = cols;\n        break;\n      }\n    }\n  }\n\n  if (!found) {\n    tempCols = initCols;\n  }\n\n  return tempCols;\n};\n","import { getRowsCount } from \"./other.js\";\n\nexport const makeMatrix = (rows, cols) => Array.from(Array(rows), () => new Array(cols)); // make 2d array\n\nexport function makeMatrixFromItems(items, _row = getRowsCount(items), _col) {\n  let matrix = makeMatrix(_row, _col);\n  for (var i = 0; i < items.length; i++) {\n    const value = items[i];\n    const {\n      x,\n      y,\n      w,\n      h,\n      responsive: { valueW },\n    } = value;\n\n    for (var j = y; j < y + h; j++) {\n      const row = matrix[j];\n      for (var k = x; k < x + (w - valueW); k++) {\n        row[k] = value;\n      }\n    }\n  }\n  return matrix;\n}\n\nexport function findCloseBlocks(items, matrix, curObject) {\n  const {\n    w,\n    h,\n    x,\n    y,\n    responsive: { valueW },\n  } = curObject;\n  const tempR = matrix.slice(y, y + h);\n  let result = []; // new Set()\n  for (var i = 0; i < tempR.length; i++) {\n    let tempA = tempR[i].slice(x, x + (w - valueW));\n    result = [...result, ...tempA.map(val => val && val.id).filter(val => val)];\n  }\n  return [...result.filter((item, pos) => result.indexOf(item) == pos)];\n  // return [...new Set(result)];\n}\n\nexport function makeMatrixFromItemsIgnore(\n  items,\n  ignoreList,\n  _row, //= getRowsCount(items)\n  _col,\n) {\n  let matrix = makeMatrix(_row, _col);\n  for (var i = 0; i < items.length; i++) {\n    const value = items[i];\n    const {\n      x,\n      y,\n      w,\n      h,\n      id,\n      responsive: { valueW },\n    } = value;\n\n    if (ignoreList.indexOf(id) === -1) {\n      for (var j = y; j < y + h; j++) {\n        const row = matrix[j];\n        if (row) {\n          for (var k = x; k < x + (w - valueW); k++) {\n            row[k] = value;\n          }\n        }\n      }\n    }\n  }\n  return matrix;\n}\n\nexport function findItemsById(closeBlocks, items) {\n  return items.filter(value => closeBlocks.indexOf(value.id) !== -1);\n}\n","import { makeMatrix, makeMatrixFromItemsIgnore, findCloseBlocks, findItemsById } from \"./matrix.js\";\nimport { getRowsCount } from \"./other.js\";\n\nexport function filterStatics(items) {\n  return items.filter(value => !value.static);\n}\n\nexport function adjustItem(matrix, item, items = [], cols) {\n  const { w: width } = item;\n\n  let valueW = item.responsive.valueW;\n  for (var i = 0; i < matrix.length; i++) {\n    const row = matrix[i];\n    for (var j = 0; j < row.length; j++) {\n      const empty = row.findIndex(val => val === undefined); // super dirty to check (empty for undefined)\n      if (empty !== -1) {\n        var z = row.slice(empty);\n        var n = z.length;\n        for (var x = 0; x < z.length; x++) {\n          if (z[x] !== undefined) {\n            n = x;\n            break;\n          }\n        } // super dirty to check (empty for undefined)\n\n        valueW = Math.max(width - n, 0);\n\n        return {\n          y: i,\n          x: empty,\n          responsive: { valueW },\n        };\n      }\n    }\n  }\n\n  valueW = Math.max(width - cols, 0);\n  return {\n    y: getRowsCount(items),\n    x: 0,\n    responsive: { valueW },\n  };\n}\n\nexport function resizeItems(items, col, rows = getRowsCount(items)) {\n  let matrix = makeMatrix(rows, col);\n  items.forEach((item, index) => {\n    let ignore = items.slice(index + 1).map(val => val.id);\n    let position = adjustItem(matrix, item, items, col);\n\n    items = items.map(value => (value.id === item.id ? { ...item, ...position } : value));\n\n    matrix = makeMatrixFromItemsIgnore(items, ignore, getRowsCount(items), col);\n  });\n\n  return items;\n}\n\nexport function getItemById(id, items) {\n  const index = items.findIndex(value => value.id === id);\n\n  return {\n    index,\n    item: items[index],\n  };\n}\n\nexport function findFreeSpaceForItem(matrix, item, items = []) {\n  const cols = matrix[0].length;\n  let xNtime = cols - (item.w - item.responsive.valueW);\n\n  for (var i = 0; i < matrix.length; i++) {\n    const row = matrix[i];\n    for (var j = 0; j < xNtime + 1; j++) {\n      const sliceA = row.slice(j, j + (item.w - item.responsive.valueW));\n      const empty = sliceA.every(val => val === undefined);\n      if (empty) {\n        const isEmpty = matrix.slice(i, i + item.h).every(a => a.slice(j, j + (item.w - item.responsive.valueW)).every(n => n === undefined));\n\n        if (isEmpty) {\n          return { y: i, x: j };\n        }\n      }\n    }\n  }\n\n  return {\n    y: getRowsCount(items),\n    x: 0,\n  };\n}\n\nfunction assignPosition(item, position, value) {\n  return value.id === item.id ? { ...item, ...position } : value;\n}\n\nconst replaceItem = (item, cachedItem, value) => (value.id === item.id ? cachedItem : value);\n\nexport function moveItem($item, items, cols, originalItem) {\n  let matrix = makeMatrixFromItemsIgnore(items, [$item.id], getRowsCount(items), cols);\n\n  const closeBlocks = findCloseBlocks(items, matrix, $item);\n  let closeObj = findItemsById(closeBlocks, items);\n\n  const statics = closeObj.find(value => value.static);\n\n  if (statics) {\n    if (originalItem) {\n      return items.map(replaceItem.bind(null, $item, originalItem));\n    }\n  }\n\n  matrix = makeMatrixFromItemsIgnore(items, closeBlocks, getRowsCount(items), cols);\n\n  let tempItems = items;\n\n  let tempCloseBlocks = closeBlocks;\n\n  let exclude = [];\n\n  closeObj.forEach(item => {\n    let position = findFreeSpaceForItem(matrix, item, tempItems);\n\n    exclude.push(item.id);\n\n    if (position) {\n      tempItems = tempItems.map(assignPosition.bind(null, item, position));\n      let getIgnoreItems = tempCloseBlocks.filter(value => exclude.indexOf(value) === -1);\n\n      matrix = makeMatrixFromItemsIgnore(tempItems, getIgnoreItems, getRowsCount(items), cols);\n    }\n  });\n\n  return tempItems;\n}\n","import { getRowsCount } from \"./other.js\";\n\nexport function getContainerHeight(items, yPerPx) {\n  return Math.max(getRowsCount(items), 2) * yPerPx;\n}\n","<style>\n  :global(body) {\n    overflow: scroll;\n  }\n\n .svlt-grid-container {\n  position: relative;\n}\n\n.svlt-grid-item {\n  touch-action:none;\n  position: absolute;\n}\n\n.svlt-grid-shadow {\n  position: absolute;\n}\n\n\n.svlt-grid-resizer {\n  user-select: none;\n  width: 20px;\n  height: 20px; \n  position:absolute; \n  right: 0; \n  bottom: 0; \n  cursor: se-resize; \n}\n\n.svlt-grid-resizer::after {\n  content: \"\";\n  position: absolute;\n  right: 3px;\n  bottom: 3px;\n  width: 5px;\n  height: 5px;\n  border-right: 2px solid rgba(0, 0, 0, 0.4);\n  border-bottom: 2px solid rgba(0, 0, 0, 0.4);\n}\n</style>\n\n<svelte:window on:resize={ debounce(onResize,300) } />\n\n<div class:svlt-grid-transition={!focuesdItem} class=svlt-grid-container bind:this={container} style=\"height: {ch}px\">\n  {#each items as item, i (item.id)}\n\n    <div on:mousedown={item.draggable ? dragOnMouseDown.bind(this, item.id) : null}\n        on:touchstart={item.draggable ? dragOnMouseDown.bind(this, item.id) : null}\n        class=svlt-grid-item style=\"{useTransform ? `transform: translate(${item.drag.dragging ? item.drag.left : (item.x * xPerPx) + gap}px, ${item.drag.dragging ? item.drag.top : (item.y * yPerPx + gap)}px);` : ''};\n        {!useTransform ? `top: ${item.drag.dragging ? item.drag.top : (item.y * yPerPx) + gap}px` : ''};\n        {!useTransform ? `left: ${item.drag.dragging ? item.drag.left : (item.x * xPerPx) + gap}px` : ''};\n        width: {item.resize.resizing ? item.resize.width : ((item.w * xPerPx) - gap * 2) - (item.responsive.valueW*xPerPx)}px;\n        height: {item.resize.resizing ? item.resize.height : (item.h * yPerPx) - gap * 2}px;\n        z-index: {item.drag.dragging || item.resize.resizing ? 3 : 1};\n        opacity: {item.resize.resizing ? 0.5 : 1}\">\n\n          <slot {item} index={i}></slot>\n          {#if item.resizable}\n            <div class=svlt-grid-resizer \n          on:touchstart={resizeOnMouseDown.bind(this,item.id)} \n          on:mousedown={resizeOnMouseDown.bind(this,item.id)}\n          ></div>\n          {/if}\n        </div>\n\n\n  {/each}\n\n  {#if shadow.active}\n    <div class=svlt-grid-shadow style=\"{useTransform ? `transform: translate(${shadow.drag.dragging ? shadow.drag.left : (shadow.x * xPerPx) + gap}px, ${shadow.drag.dragging ? shadow.drag.top : (shadow.y * yPerPx + gap)}px);` : ''};\n        {!useTransform ? `top: ${shadow.drag.dragging ? shadow.drag.top : (shadow.y * yPerPx) + gap}px` : ''};\n        {!useTransform ? `left: ${shadow.drag.dragging ? shadow.drag.left : (shadow.x * xPerPx) + gap}px` : ''};\n    width:{((shadow.w * xPerPx) - gap * 2) - (shadow.responsive.valueW*xPerPx)}px;\n    height:{(shadow.h * yPerPx) - gap * 2}px;\"></div>\n  {/if}\n</div>\n\n<script>\nimport { onMount, beforeUpdate,createEventDispatcher } from \"svelte\";\n\nimport { resizeItems, getItemById, moveItem, findFreeSpaceForItem } from \"./utils/item.js\";\nimport { getContainerHeight } from \"./utils/container.js\";\nimport { debounce, getRowsCount, getColumnFromBreakpoints, getCordinates, getTranslate } from \"./utils/other.js\";\nimport { makeMatrixFromItemsIgnore } from \"./utils/matrix.js\";\n\nexport let useTransform = false;\nexport let items = [];\nexport let cols = 0;\nexport let dragDebounceMs = 350;\nexport let gap = 0;\nexport let rowHeight = 150;\nexport let breakpoints;\nexport let fillEmpty = true;\n\nlet container,\n  focuesdItem,\n  bound,\n  xPerPx,\n  currentItemIndex,\n  getComputedCols,\n  documentWidth,\n  resizeNoDynamicCalc,\n  yPerPx = rowHeight,\n  initCols = cols,\n  shadow = {\n    w: 0,\n    h: 0,\n    x: 0,\n    y: 0,\n    active: false,\n    id: null,\n    responsive: { valueW: 0 },\n    min: {},\n    max: {}\n  },\n  ch = getContainerHeight(items, yPerPx);\n\nconst dispatch = createEventDispatcher();\n\nconst getDocWidth = () => document.documentElement.clientWidth\n\nfunction onResize() {\n\n  let w = document.documentElement.clientWidth\n\n  if(w !== documentWidth) {\n    documentWidth = w;\n    \n    bound = container.getBoundingClientRect();\n\n    let getCols = getColumnFromBreakpoints(breakpoints,w,cols,initCols)\n    \n    getComputedCols = getCols\n\n    xPerPx = bound.width / getCols\n\n    dispatch('resize', {\n      cols:getCols,\n      xPerPx,\n      yPerPx // same as rowHeight\n    });\n\n    if(breakpoints) {\n    \titems = resizeItems(items, getCols);\n    }\n\n  } \n\n}\n\n\nonMount(() => {\n  bound = container.getBoundingClientRect();\n\n  let getCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n  \n  getComputedCols = getCols\n\n  documentWidth = document.documentElement.clientWidth\n\n  if(breakpoints) {\n    items = resizeItems(items, getCols)\n  }\n\n  xPerPx = bound.width / getCols\n\n  dispatch('mount', {\n    cols: getCols,\n    xPerPx,\n    yPerPx // same as rowHeight\n  })\n\n});\n\n// resize\n\nlet resizeStartX, resizeStartY, resizeStartWidth, resizeStartHeight;\n\nfunction resizeOnMouseDown(id, e) {\n  e.stopPropagation();\n\n  let {pageX,pageY} = getCordinates(e)\n\n  const { item, index } = getItemById(id, items);\n\n  currentItemIndex = index;\n\n  focuesdItem = item;\n\n  cacheItem = {...item}\n\n  resizeNoDynamicCalc = item.h + item.y === getRowsCount(items);\n\n  shadow = {...shadow,...focuesdItem,...{active:true}}\n\n  resizeStartX = pageX - bound.x;\n  resizeStartY = pageY - bound.y;\n\n  resizeStartWidth = (item.w * xPerPx) - (gap * 2) - (focuesdItem.responsive.valueW * xPerPx);\n\n  resizeStartHeight = (item.h * yPerPx) - (gap * 2);\n\n  getComputedCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n\n  window.addEventListener(\"mousemove\", resizeOnMouseMove, false);\n  window.addEventListener(\"touchmove\", resizeOnMouseMove, false);\n\n  window.addEventListener(\"mouseup\", resizeOnMouseUp, false);\n  window.addEventListener(\"touchend\", resizeOnMouseUp, false);\n}\n\nfunction resizeOnMouseMove(e) {\n\n  let {pageX,pageY}=getCordinates(e);\n\n  pageX = pageX - bound.x;\n  pageY = pageY - bound.y;\n\n  const height = resizeStartHeight + pageY - resizeStartY;\n  const width = resizeStartWidth + (pageX - resizeStartX)\n\n  const {responsive:{valueW} } = focuesdItem;\n\n  let wRes = Math.round(width / xPerPx) + valueW\n\n  const {h:minHeight=1,w:minWidth=1} = focuesdItem.min\n  const {h:maxHeight,w:maxWidth = ((getComputedCols - focuesdItem.x)+valueW)} = focuesdItem.max\n\n  wRes = Math.min(Math.max(wRes,minWidth),maxWidth)/* min max*/\n\n  let hRes = Math.round(height/yPerPx)\n  if(maxHeight) {\n    hRes = Math.min(hRes,maxHeight)\n  }\n  hRes = Math.max(hRes,minHeight)\n\n  shadow = {...shadow, ...{w:wRes, h:hRes}} \n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    resize: {\n      resizing:true,\n      width,\n      height\n    },\n    w:wRes,\n    h:hRes\n  }\n\n  if (!resizeNoDynamicCalc) {\n    debounceRecalculateGridPosition();\n  }\n}\n\nfunction resizeOnMouseUp(e) {\n  e.stopPropagation();\n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    resize:{\n      resizing:false,\n      width:0,\n      height:0\n    }\n  }\n\n  window.removeEventListener(\"mousemove\", resizeOnMouseMove, false);\n  window.removeEventListener(\"touchmove\", resizeOnMouseMove, false);\n\n  window.removeEventListener(\"mouseup\", resizeOnMouseUp, false);\n  window.removeEventListener(\"touchend\", resizeOnMouseUp, false);\n\n  shadow = {...shadow, ... {w:0,h:0,x:0,y:0,active:false,id:null,responsive:{valueW:0}}, min:{},max:{} } \n\n  recalculateGridPosition(\"up\");\n\n  focuesdItem = undefined;\n  resizeNoDynamicCalc = false;\n}\n\n// drag\nlet dragX = 0,\n  dragY = 0;\n\nconst debounceRecalculateGridPosition = debounce(recalculateGridPosition, dragDebounceMs);\n\nlet cacheItem = {};\n\nfunction dragOnMouseDown(id, e) {\n  e.stopPropagation()\n  let {pageX,pageY} = getCordinates(e)\n\n  const { item, index } = getItemById(id, items);\n  \n  currentItemIndex = index;\n\n\n  focuesdItem = item;\n  cacheItem = {...item}\n  \n  shadow = { ...shadow, ...item, active: true }; \n\n  \n\n  let { currentTarget } = e;\n\n  let offsetLeft, offsetTop;\n\n  if(useTransform) {\n    const { x, y } = getTranslate(currentTarget.style.transform)\n    offsetLeft = x\n    offsetTop = y\n  } else {\n    offsetLeft = currentTarget.offsetLeft\n    offsetTop = currentTarget.offsetTop\n  }\n\n  pageX = pageX - bound.x;\n  pageY = pageY - bound.y;\n\n  dragX = pageX - offsetLeft;\n\n  dragY = pageY - offsetTop;\n\n  getComputedCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n\n\n  if (item) {\n    window.addEventListener(\"mousemove\", dragOnMove, false);\n    window.addEventListener(\"touchmove\", dragOnMove, false);\n\n    window.addEventListener(\"mouseup\", dragOnMouseUp, false);\n    window.addEventListener(\"touchend\", dragOnMouseUp, false);\n  } else {\n    console.warn(\"Can not get item\");\n  }\n}\n\n\nfunction dragOnMove(e) {\n  e.stopPropagation()\n\n  let {pageX,pageY} = getCordinates(e)\n\n  const y = pageY - bound.y;\n  const x = pageX - bound.x;\n\n  let xRes = Math.round((x - dragX) / xPerPx);\n  let yRes = Math.round((y - dragY) / yPerPx);\n\n  xRes = Math.max(Math.min(xRes,getComputedCols-(focuesdItem.w- focuesdItem.responsive.valueW)),0)\n\n  yRes = Math.max(yRes, 0);\n\n  let assignItem = items[currentItemIndex];\n\n  items[currentItemIndex] = {\n    ...assignItem,\n    drag:{\n      dragging:true,\n      top:y - dragY,\n      left:x - dragX\n    },\n    x:xRes,\n    y:yRes\n  }\n\n  shadow = {...shadow, ...{x:xRes,y:yRes}}\n\n  debounceRecalculateGridPosition();\n}\n\nfunction dragOnMouseUp(e) {\n  window.removeEventListener(\"mousemove\", dragOnMove, false);\n  window.removeEventListener(\"touchmove\", dragOnMove, false);\n\n  window.removeEventListener(\"mouseup\", dragOnMouseUp, false);\n  window.removeEventListener(\"touchend\", dragOnMouseUp, false);\n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    drag: {\n      dragging: false,\n      top: 0,\n      left: 0\n    },\n  }\n\n  dragX = 0;\n  dragY = 0;\n\n  shadow = {...shadow, ...{w:0,h:0,x:0,y:0,active:false,id:null}} \n  \n  recalculateGridPosition(\"up\");\n\n  focuesdItem = undefined;\n}\n\n\n// Will work on this, need to make code cleaner\nfunction recalculateGridPosition(action) {\n  const dragItem = items[currentItemIndex];\n\n  let getCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n  let result = moveItem(dragItem, items, getCols, cacheItem);\n\n  if(fillEmpty) {\n\n    result.forEach(value => {\n      if (value.id !== dragItem.id) {\n        result = result.map($val =>\n          $val.id === value.id\n            ? {\n                ...$val,\n                ...findFreeSpaceForItem(\n                  makeMatrixFromItemsIgnore(result, [value.id], getRowsCount(result), getCols),\n                  value,\n                  result\n                )\n              }\n            : $val\n        );\n      }\n    });\n  }\n\n  items = result\n\n  dispatch('adjust', {\n    focuesdItem: dragItem\n  });\n\n}\n\nbeforeUpdate(() => {\n  if (!focuesdItem) {\n    ch = getContainerHeight(items, yPerPx);\n    if(cols !== initCols) {\n      if(bound) {\n        xPerPx = bound.width/cols\n        initCols = cols\n      }\n    }\n  }\n});\n\n\n</script>\n","function getRowsCount(items) {\n  return Math.max(...items.map(val => val.y + val.h), 1);\n}\n\nconst makeMatrix = (rows, cols) => Array.from(Array(rows), () => new Array(cols)); // make 2d array\n\nfunction makeMatrixFromItems(items, _row = getRowsCount(items), _col) {\n  let matrix = makeMatrix(_row, _col);\n  for (var i = 0; i < items.length; i++) {\n    const value = items[i];\n    const {\n      x,\n      y,\n      w,\n      h,\n      responsive: { valueW },\n    } = value;\n\n    for (var j = y; j < y + h; j++) {\n      const row = matrix[j];\n      for (var k = x; k < x + (w - valueW); k++) {\n        row[k] = value;\n      }\n    }\n  }\n  return matrix;\n}\n\nfunction findCloseBlocks(items, matrix, curObject) {\n  const {\n    w,\n    h,\n    x,\n    y,\n    responsive: { valueW },\n  } = curObject;\n  const tempR = matrix.slice(y, y + h);\n  let result = []; // new Set()\n  for (var i = 0; i < tempR.length; i++) {\n    let tempA = tempR[i].slice(x, x + (w - valueW));\n    result = [...result, ...tempA.map(val => val && val.id).filter(val => val)];\n  }\n  return [...result.filter((item, pos) => result.indexOf(item) == pos)];\n  // return [...new Set(result)];\n}\n\nfunction makeMatrixFromItemsIgnore(\n  items,\n  ignoreList,\n  _row, //= getRowsCount(items)\n  _col,\n) {\n  let matrix = makeMatrix(_row, _col);\n  for (var i = 0; i < items.length; i++) {\n    const value = items[i];\n    const {\n      x,\n      y,\n      w,\n      h,\n      id,\n      responsive: { valueW },\n    } = value;\n\n    if (ignoreList.indexOf(id) === -1) {\n      for (var j = y; j < y + h; j++) {\n        const row = matrix[j];\n        if (row) {\n          for (var k = x; k < x + (w - valueW); k++) {\n            row[k] = value;\n          }\n        }\n      }\n    }\n  }\n  return matrix;\n}\n\nfunction findItemsById(closeBlocks, items) {\n  return items.filter(value => closeBlocks.indexOf(value.id) !== -1);\n}\n\nfunction adjustItem(matrix, item, items = [], cols) {\n  const { w: width } = item;\n\n  let valueW = item.responsive.valueW;\n  for (var i = 0; i < matrix.length; i++) {\n    const row = matrix[i];\n    for (var j = 0; j < row.length; j++) {\n      const empty = row.findIndex(val => val === undefined); // super dirty to check (empty for undefined)\n      if (empty !== -1) {\n        var z = row.slice(empty);\n        var n = z.length;\n        for (var x = 0; x < z.length; x++) {\n          if (z[x] !== undefined) {\n            n = x;\n            break;\n          }\n        } // super dirty to check (empty for undefined)\n\n        valueW = Math.max(width - n, 0);\n\n        return {\n          y: i,\n          x: empty,\n          responsive: { valueW },\n        };\n      }\n    }\n  }\n\n  valueW = Math.max(width - cols, 0);\n  return {\n    y: getRowsCount(items),\n    x: 0,\n    responsive: { valueW },\n  };\n}\n\nfunction resizeItems(items, col, rows = getRowsCount(items)) {\n  let matrix = makeMatrix(rows, col);\n  items.forEach((item, index) => {\n    let ignore = items.slice(index + 1).map(val => val.id);\n    let position = adjustItem(matrix, item, items, col);\n\n    items = items.map(value => (value.id === item.id ? { ...item, ...position } : value));\n\n    matrix = makeMatrixFromItemsIgnore(items, ignore, getRowsCount(items), col);\n  });\n\n  return items;\n}\n\nfunction findFreeSpaceForItem(matrix, item, items = []) {\n  const cols = matrix[0].length;\n  let xNtime = cols - (item.w - item.responsive.valueW);\n\n  for (var i = 0; i < matrix.length; i++) {\n    const row = matrix[i];\n    for (var j = 0; j < xNtime + 1; j++) {\n      const sliceA = row.slice(j, j + (item.w - item.responsive.valueW));\n      const empty = sliceA.every(val => val === undefined);\n      if (empty) {\n        const isEmpty = matrix.slice(i, i + item.h).every(a => a.slice(j, j + (item.w - item.responsive.valueW)).every(n => n === undefined));\n\n        if (isEmpty) {\n          return { y: i, x: j };\n        }\n      }\n    }\n  }\n\n  return {\n    y: getRowsCount(items),\n    x: 0,\n  };\n}\n\nfunction assignPosition(item, position, value) {\n  return value.id === item.id ? { ...item, ...position } : value;\n}\n\nconst replaceItem = (item, cachedItem, value) => (value.id === item.id ? cachedItem : value);\n\nfunction moveItem($item, items, cols, originalItem) {\n  let matrix = makeMatrixFromItemsIgnore(items, [$item.id], getRowsCount(items), cols);\n\n  const closeBlocks = findCloseBlocks(items, matrix, $item);\n  let closeObj = findItemsById(closeBlocks, items);\n\n  const statics = closeObj.find(value => value.static);\n\n  if (statics) {\n    if (originalItem) {\n      return items.map(replaceItem.bind(null, $item, originalItem));\n    }\n  }\n\n  matrix = makeMatrixFromItemsIgnore(items, closeBlocks, getRowsCount(items), cols);\n\n  let tempItems = items;\n\n  let tempCloseBlocks = closeBlocks;\n\n  let exclude = [];\n\n  closeObj.forEach(item => {\n    let position = findFreeSpaceForItem(matrix, item, tempItems);\n\n    exclude.push(item.id);\n\n    if (position) {\n      tempItems = tempItems.map(assignPosition.bind(null, item, position));\n      let getIgnoreItems = tempCloseBlocks.filter(value => exclude.indexOf(value) === -1);\n\n      matrix = makeMatrixFromItemsIgnore(tempItems, getIgnoreItems, getRowsCount(items), cols);\n    }\n  });\n\n  return tempItems;\n}\n\nfunction makeItem(item) {\n  return {\n    drag: {\n      top: null,\n      left: null,\n      dragging: false,\n    },\n    resize: {\n      width: null,\n      height: null,\n      resizing: false,\n    },\n    responsive: {\n      valueW: 0,\n    },\n    static: false,\n    resizable: !item.static,\n    draggable: !item.static,\n    min: { ...item.min },\n    max: { ...item.max },\n    ...item,\n  };\n}\n\nconst gridHelp = {\n  findSpaceForItem(item, items, cols) {\n    let matrix = makeMatrixFromItems(items, getRowsCount(items), cols);\n\n    let position = findFreeSpaceForItem(matrix, item, items);\n    return position;\n  },\n\n  appendItem(item, items, cols) {\n    return moveItem(item, [...items, ...[item]], cols);\n  },\n\n  resizeItems(items, col, rows) {\n    return resizeItems(items, col, rows);\n  },\n\n  item(obj) {\n    return makeItem(obj);\n  },\n};\n\nexport default gridHelp;\n","<script>\r\n  import { getActiveDash } from \"../dataStore\";\r\n  import Widget from \"./widgets/Widget.svelte\";\r\n  let dashData = getActiveDash();\r\n  let widgets = dashData ? Array.from(dashData.widgets.keys()) : [];\r\n\r\n   //Grid Layout \r\n  import Grid from \"svelte-grid\";\r\n  import gridHelp from \"svelte-grid/build/helper/index.mjs\";\r\n\r\n    //The array of grid elements\r\n let items_arr = [];\r\n let cols = 10;\r\n\r\n    //Add so many items to grid as we have in 'widgets'\r\n    //how can we get positions and sizes of each Widget? \r\n    //It will be stored in dataStorage by default(as MVP)?\r\n\r\n  widgets.forEach((ref) => {\r\n    let newItem = gridHelp.item({\r\n    w: 2,\r\n    h: 2,\r\n    x: 3,\r\n    y: 0,\r\n    id: ref\r\n  });\r\n  items_arr = gridHelp.appendItem(newItem, items_arr, cols);\r\n  })\r\n \r\n</script>\r\n\r\n<div class=\"grid-container\">\r\n  <Grid items={items_arr} bind:items={items_arr} cols={cols} let:item rowHeight={100} gap={20}>\r\n    <div class=\"content\">\r\n      <Widget ref={item.id} />\r\n    </div>\r\n  </Grid>\r\n</div>\r\n\r\n<style>\r\n  .grid-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 20px;\r\n    padding-bottom: 15vw;\r\n  }\r\n  .content {\r\n    width: 100%;\r\n    height: 100%;\r\n    color: black;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: large;\r\n    border: 1px solid #707070;\r\n  }\r\n\r\n</style>","<script>\r\n  import { addWidget } from '../dataStore.js';\r\n  import Add from './buttons/Add.svelte';\r\n  import Trash from './buttons/Trash.svelte';\r\n  let menuOpen = false;\r\n  let trashActive = false;\r\n  \r\n  const closeMenu = () => {\r\n    setTimeout(() => { \r\n      if (menuOpen) { // timeout and latch so runs after toggle\r\n        menuOpen = false;\r\n      }\r\n    }, 0);\r\n    window.removeEventListener('click', closeMenu, {capture : true});\r\n  }\r\n  const openMenu = () => {\r\n    menuOpen = true;\r\n    window.addEventListener('click', closeMenu, {capture : true});\r\n  }\r\n  const toggleMenu = () => {menuOpen ? closeMenu() : openMenu()};\r\n\r\n  const toggleTrash = () => {trashActive = !trashActive};\r\n\r\n  const add = type => {\r\n    addWidget(type);\r\n    closeMenu();\r\n  }\r\n</script>\r\n  \r\n<div class=\"menuArea\">\r\n  <nav>\r\n    <Trash active={trashActive} on:trash={toggleTrash} on:trash /> <!-- the 2nd on:trash is to pass the event out to App -->\r\n      {#if menuOpen}\r\n        <img class=\"cancel\" src=\"/images/cancelIcon.svg\" alt=\"x\" />\r\n        <div class=\"menu\">\r\n          <button on:click={() => add('Sticky')}>\r\n            <h3>Sticky</h3> \r\n            <img src=\"/images/addIcon.svg\" alt=\"+\" />\r\n          </button>\r\n        </div>\r\n      {/if}\r\n    <h2>Widgets</h2>\r\n    <Add active={menuOpen} on:add={toggleMenu} />\r\n  </nav>\r\n</div>\r\n  \r\n<style>\r\n  .menuArea {\r\n    position: fixed;\r\n    display: flex;\r\n    flex-flow: row-reverse nowrap;\r\n    bottom: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    min-height: 15vh;\r\n    z-index: 100;\r\n    background: rgba(255, 255, 255, 0.5);\r\n  }\r\n  nav {\r\n    width: 280px;\r\n    margin-right: 5vh;\r\n    margin-bottom: 5vh;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr 5fr 1fr;\r\n    grid-template-rows: auto auto 70px;\r\n    grid-template-areas: \r\n      \". . cancel\"\r\n      \"menu menu menu\"\r\n      \"trash title add\";\r\n    align-items: center;\r\n    background: rgba(255,255,255,0.5);\r\n  }\r\n  .menu {\r\n    grid-area: menu;\r\n    border: solid 1px #707070;\r\n  }\r\n  .cancel {\r\n    grid-area: cancel;\r\n    place-self: center end;\r\n  }\r\n  button {\r\n    width: 100%;\r\n    display: inline-flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    background: none;\r\n    border: none;\r\n    padding: 12px;\r\n    margin: 0;\r\n  }\r\n  h3 {\r\n    width: 100%;\r\n    font-size: 32px;\r\n    font-weight: 300;\r\n    margin: 0;\r\n  }\r\n  h2 {\r\n    grid-area: title;\r\n    display: inline-grid;\r\n    place-items: center center;\r\n    height: 96%;\r\n    border: solid 1px #707070;\r\n    border-width: 1px 0 1px 0;\r\n    font-size: 32px;\r\n    font-weight: 300;\r\n    margin: 0;\r\n  }\r\n</style>","<script>\r\n\timport DashNav from './components/DashNav.svelte';\r\n\timport Dash from './components/Dash.svelte';\r\n\timport WidgetMenu from './components/WidgetMenu.svelte';\r\n\tlet trashActive = false;\r\n\tconst activateTrash = event => {\r\n\t\ttrashActive = event.detail.active;\r\n\t}\r\n</script>\r\n\r\n<main class=\"{trashActive ? 'trash' : ''}\">\r\n\t<DashNav />\r\n\t<Dash />\r\n    <WidgetMenu on:trash={activateTrash} />\r\n</main>","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body,\r\n\tprops: {\r\n\t\tname: 'world'\r\n\t}\r\n});\r\n\r\nexport default app;"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","setAttribute","set_data","set_style","key","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","beforeUpdate","before_update","createEventDispatcher","type","detail","callbacks","e","createEvent","initCustomEvent","custom_event","slice","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","has","add","fragment","dirty","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","globals","window","global","outro_and_destroy_block","lookup","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","init","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","ready","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","dashboards","activeDashId","Symbol","getActiveDash","get","addWidget","widgetData","sizeAndPos","w","h","x","y","_title","_data","widgets","_widgetsCount","n","title","ref","dashData","addDash","trash","active","dispatch","$_title","editingTitle","$_data","editing","removeSelf","getWidget","widgetRef","dashRef","removeWidget","debounce","ms","timeoutId","args","clearTimeout","setTimeout","apply","getCordinates","pageX","changedTouches","pageY","getRowsCount","items","Math","max","val","getColumnFromBreakpoints","breakpoints","windowWidth","cols","initCols","found","tempCols","resolution","makeMatrix","rows","makeMatrixFromItemsIgnore","ignoreList","_row","_col","matrix","id","responsive","valueW","j","row","resizeItems","col","item","ignore","position","width","findIndex","undefined","z","adjustItem","getItemById","findFreeSpaceForItem","xNtime","every","assignPosition","replaceItem","cachedItem","getContainerHeight","yPerPx","resizeOnMouseDown","bind","slot_ctx","useTransform","drag","dragging","left","xPerPx","gap","top","resize","resizing","height","draggable","dragOnMouseDown","changed","resizable","shadow","ch","focuesdItem","onResize","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","container","currentItemIndex","getComputedCols","documentWidth","resizeNoDynamicCalc","dragDebounceMs","rowHeight","fillEmpty","min","getDocWidth","documentElement","clientWidth","resizeStartX","resizeStartY","resizeStartWidth","resizeStartHeight","resizeOnMouseMove","wRes","round","minHeight","minWidth","maxHeight","maxWidth","hRes","assignItem","debounceRecalculateGridPosition","resizeOnMouseUp","stopPropagation","recalculateGridPosition","getBoundingClientRect","getCols","dragX","dragY","cacheItem","dragOnMove","xRes","yRes","dragOnMouseUp","action","dragItem","result","$item","originalItem","closeBlocks","curObject","tempR","tempA","pos","findCloseBlocks","closeObj","findItemsById","find","static","tempItems","tempCloseBlocks","exclude","getIgnoreItems","moveItem","$val","offsetLeft","offsetTop","currentTarget","str","transform","getIndex","console","warn","gridHelp","findSpaceForItem","makeMatrixFromItems","appendItem","obj","items_arr","keys","newItem","trashActive","toggleTrash","menuOpen","toggleMenu","closeMenu","capture","activateTrash","body"],"mappings":"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"}