{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../WidgetMenu.svelte",
    "../../Sticky.svelte",
    "../../Image.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport DashNav from './components/DashNav.svelte';\n\timport Dash from './components/Dash.svelte';\n\timport WidgetMenu from './components/WidgetMenu.svelte';\n</script>\n\n<main>\n\t<div class=\"container\">\n\t\t<div class=\"nav-row\">\n\t\t\t<div class=\"dashnav\">\n\t\t\t\t<DashNav />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"main-row\">\n\t\t\t<div class=\"dash\">\n\t\t\t\t<Dash />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"bottom-row\">\n\t\t\t<WidgetMenu />\n\t\t</div>\n\t</div>\n</main>\n\n<style>\n\t.container {\n\t\tdisplay: grid;\n\t/*\tgrid-template-columns: 1fr 1fr 1fr;*/\n\t\tgrid-template-rows: 1fr 7fr 1fr;\n\t}\n\n\t.nav-row {\n\t\tjustify-self: center;\n\t\talign-self: top;\n\t}\n\n\t.main-row {\n\t\tdisplay: grid;\n\t\tjustify-self: center;\n\n\t}\n\n\t.dashnav {\n\t\tjustify-self: center;\n\t}\n\n\t.dash {\n\t\tjustify-self: center;\n\t}\n\n\t.bottom-row {\n\t\tjustify-self: right;\n\t\talign-self: end;\n\t}\n</style>",
    "<script>\n  import Add from './buttons/Add.svelte';\n  import Trash from './buttons/Trash.svelte';\n</script>\n\n<nav>\n  <div class=\"widg-menu-container\">\n    <div class=\"add-btn\">\n      <Add />\n    </div>\n    <div class=\"widg-menu\">\n      <h2>Widgets</h2>\n    </div>\n    <div class=\"trash-btn\">\n      <Trash />\n    </div>\n  </div>\n</nav>\n\n<style>\n  .widg-menu-container {\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n\n  .add-btn{\n    align-self: center;\n    justify-self: center;\n  }\n\n    .widg-menu{\n    align-self: center;\n    justify-self: center;\n  }\n    .trash-btn{\n    align-self: center;\n    justify-self: center;\n  }\n</style>",
    "<script>\n    import { beforeUpdate } from 'svelte';\n    import Widget from './Widget.svelte';\n    import Text from './StickyTypes/Text.svelte';\n    import Image from './StickyTypes/Image.svelte';\n    import detectInputType from '../utils/detectInputType.js';\n    export let title;\n    export let data;\n\n    let type;\n    beforeUpdate(() => {\n\t\t  type = detectInputType($data);\n\t});\n</script>\n<div class=\"stickies-container\">\n<div class=\"text-widg\">\n<Widget {title}>\n    {#if type === 'Text'}\n        <Text {data} />\n    {:else}\n        <input type=\"text\" bind:value={$data} /> <!-- * bind -->\n    {/if}\n\n    \n</Widget>\n</div>\n<div class=\"image-widg\">\n<Widget {title}>\n    <Image/>\n</Widget>\n</div>\n</div>\n<style>\n.stickies-container{\ndisplay:grid;\n\t\tgrid-template-columns: 1fr 1fr;\n}\n</style>\n\n<!-- https://svelte.dev/tutorial/text-inputs -->\n",
    "<script> \nexport let src = \"https://source.unsplash.com/random/800x600/?forest?\"\n</script>\n<img class=\"photo\" alt=\"random forest photo\" {src} >\n<style>\n.photo{\n    width: 200px;\n    height: 150px;\n    border: black;\n    border-width: 2px;\n    border-style: solid;\n}\n</style>\n\n\n"
  ],
  "names": [],
  "mappings": "AAyBC,UAAU,eAAC,CAAC,AACX,OAAO,CAAE,IAAI,CAEb,kBAAkB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,AAChC,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,YAAY,CAAE,MAAM,CACpB,UAAU,CAAE,GAAG,AAChB,CAAC,AAED,SAAS,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,YAAY,CAAE,MAAM,AAErB,CAAC,AAED,QAAQ,eAAC,CAAC,AACT,YAAY,CAAE,MAAM,AACrB,CAAC,AAED,KAAK,eAAC,CAAC,AACN,YAAY,CAAE,MAAM,AACrB,CAAC,AAED,WAAW,eAAC,CAAC,AACZ,YAAY,CAAE,KAAK,CACnB,UAAU,CAAE,GAAG,AAChB,CAAC;ACjCA,oBAAoB,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,AACpC,CAAC,AAED,uBAAQ,CAAC,AACP,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,MAAM,AACtB,CAAC,AAEC,yBAAU,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,MAAM,AACtB,CAAC,AACC,yBAAU,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,YAAY,CAAE,MAAM,AACtB,CAAC;ACJH,iCAAmB,CAAC,AACpB,QAAQ,IAAI,CACV,qBAAqB,CAAE,GAAG,CAAC,GAAG,AAChC,CAAC;AC/BD,oBAAM,CAAC,AACH,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,KAAK,CACb,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,AACvB,CAAC"
}