{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\src\\App.svelte",
    "..\\..\\src\\components\\DashNav.svelte",
    "..\\..\\src\\components\\Dash.svelte",
    "..\\..\\src\\components\\Footer.svelte",
    "..\\..\\src\\components\\WidgetMenu.svelte",
    "..\\..\\node_modules\\svelte-grid\\src\\index.svelte",
    "..\\..\\src\\components\\buttons\\Right.svelte",
    "..\\..\\src\\components\\buttons\\Left.svelte",
    "..\\..\\src\\components\\buttons\\Add.svelte",
    "..\\..\\src\\components\\buttons\\Trash.svelte",
    "..\\..\\src\\components\\widgets\\Widget.svelte",
    "..\\..\\src\\components\\widgets\\Sticky.svelte",
    "..\\..\\src\\components\\widgets\\stickyTypes\\Text.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n\timport DashNav from './components/DashNav.svelte';\r\n\timport Dash from './components/Dash.svelte';\r\n\timport WidgetMenu from './components/WidgetMenu.svelte';\r\n\timport Footer from './components/Footer.svelte';\r\n\tlet trashActive = false;\r\n\tlet clearWidgets = false;\r\n\tconst clearDash = event => {\r\n\t\tclearWidgets = true;\r\n\t\tsetTimeout(() => clearWidgets = false, 0)\r\n\t}\r\n\tconst activateTrash = event => {\r\n\t\ttrashActive = event.detail.active;\r\n\t}\r\n</script>\r\n\r\n<main class=\"{trashActive ? 'trash' : ''}\">\r\n\t<DashNav on:changingDash={clearDash} />\r\n\t<Dash {clearWidgets} />\r\n    <WidgetMenu on:trash={activateTrash} />\r\n</main>\r\n<Footer />\r\n\r\n<style>\r\n\tmain {\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t\toverflow-x: hidden;\r\n\t\tposition: relative;\r\n\t}\r\n\t@media only screen and (min-width: 780px) {\r\n\t\tmain {\r\n\t\tpadding-left: calc(15vw - 78px - 39px);\r\n\t\tpadding-right: calc(15vw - 78px - 39px);\r\n\t\t}\r\n\t}\r\n</style>\r\n",
    "<script>\r\n    import {_activeDashIndex, dashboards, removeDash, addDash, setActiveDashIndex} from '../dataStore';\r\n    import { createEventDispatcher } from 'svelte';\r\n    import { get, writable } from 'svelte/store';\r\n    import Left from './buttons/Left.svelte';\r\n    import Right from './buttons/Right.svelte';\r\n    import Trash from './buttons/Trash.svelte';\r\n    import Add from './buttons/Add.svelte';\r\n    import Toggler from '../utils/toggler.js';\r\n    import handleEnter from '../utils/handleEnter';\r\n    \r\n    const dispatch = createEventDispatcher();\r\n    let trashIsOpen = false;\r\n    const trash = new Toggler(state => trashIsOpen = state);\r\n    let editingTitle = false;\r\n\r\n    const makeNavIndexArray = (activeIndex) => {\r\n        let arr = [];\r\n        for (let i=0;i<7;i++) {\r\n            if (dashboards.length < 5) { // no loop\r\n                arr.push((activeIndex+i-3));\r\n            }\r\n            else {\r\n                const loopedIndex = (dashboards.length + activeIndex + i - 3) % dashboards.length;\r\n                arr.push(loopedIndex);\r\n            }\r\n        }\r\n        return arr\r\n    }\r\n    $: navIndexArray = makeNavIndexArray($_activeDashIndex);\r\n    $: _title = dashboards[$_activeDashIndex] ? dashboards[$_activeDashIndex]._title : writable(''); // fallback for no dashboards\r\n\r\n    let animationClass = '';\r\n    const setActiveDash = shift => {\r\n        const nextDashIndex = (dashboards.length + $_activeDashIndex + shift) % dashboards.length;\r\n        if (shift !== 0 && nextDashIndex !== $_activeDashIndex) {\r\n            dispatch('changingDash');\r\n            if (shift > 0) {\r\n                animationClass = 'forward-animation';\r\n            }\r\n            else {\r\n                animationClass = 'backward-animation';\r\n            }\r\n            setTimeout(() => {\r\n                setActiveDashIndex(nextDashIndex);\r\n                animationClass = '';\r\n            }, 500);\r\n        }\r\n    } \r\n\r\n    let previousDash = $_activeDashIndex;\r\n    const addNewDash = () => {\r\n        previousDash = $_activeDashIndex;\r\n        addDash('');\r\n        editingTitle = true;\r\n        setActiveDashIndex(dashboards.length-1);\r\n    }\r\n\r\n    const closeEditingTitle = () => {\r\n        editingTitle = false;\r\n        if (event.target.value === '') {\r\n            removeDash(dashboards.length-1);\r\n            setActiveDashIndex(previousDash);\r\n        }\r\n    }\r\n\r\n    const deleteDash = i => {\r\n        removeDash(i);\r\n        setActiveDashIndex((dashboards.length + $_activeDashIndex - 1) % dashboards.length);\r\n    }\r\n\r\n</script>\r\n\r\n<nav>\r\n    <Left on:left={() => setActiveDash(-1)} />\r\n    <Trash active={trashIsOpen} on:trash={trash.toggle} cancelPos=\"right\" />\r\n    <div class=\"container {trashIsOpen ? 'trash' : ''}\">\r\n    {#if dashboards.length > 0}\r\n        <div class=\"carousel {animationClass}\">\r\n            {#each navIndexArray as dashIndex, i}\r\n                {#if dashIndex === $_activeDashIndex} \r\n                    <div class=\"current\">\r\n                        {#if editingTitle}\r\n                            <input bind:value={$_title} on:blur={closeEditingTitle} on:keypress={handleEnter} type=\"text\" autofocus />\r\n                        {:else}\r\n                            <div class=\"active-dash-title\"><button on:click={() => editingTitle = true}>{$_title}</button><span><Trash className=\"small\" on:trash={() => deleteDash(dashIndex)} /></span></div>\r\n                        {/if}\r\n                    </div>\r\n                {:else}\r\n                    <div class=\"nav-button-{i}\">\r\n                    {#if dashboards[dashIndex]} \r\n                        <button on:click={() => setActiveDash(i > 3 ? 1 : -1)}>{get(dashboards[dashIndex]._title)}</button>\r\n                        <span><Trash className=\"small\" on:trash={() => deleteDash(dashIndex)} /></span>\r\n                    {/if}\r\n                    </div>\r\n                {/if}\r\n            {/each}\r\n        </div>\r\n    {:else}\r\n        <div class=\"carousel\"></div>\r\n    {/if}\r\n    </div>\r\n    <Add on:add={addNewDash} />\r\n    <Right on:right={() => setActiveDash(1)} />\r\n</nav>\r\n\r\n<style>\r\n:root {\r\n    --animation-speed: 500ms;\r\n    --animation-curve: ease-in-out;\r\n    --carousel-size: 150%;\r\n}\r\nnav { \r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: auto 70px auto 70px auto 70px auto 70px auto;\r\n    grid-template-areas: \"left . . trash bar add . . right\";\r\n    grid-template-rows: 70px;\r\n    place-items: start center;\r\n    margin-bottom: 70px;\r\n    margin-top: 24px;\r\n}\r\n.container {\r\n    position: relative;\r\n    grid-area: bar;\r\n    overflow-x: hidden;\r\n    overflow-y: visible;\r\n    width: calc(100% + 18px);\r\n    min-width: 50vw;\r\n    min-height: 100%;\r\n    box-sizing: border-box;\r\n    background: #ACACAC;\r\n    z-index: 200;\r\n}\r\n.trashMenu {\r\n    position: relative;\r\n    display: flex;\r\n    overflow-y: visible;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 24px;\r\n}\r\n.trashMenu button {\r\n    width: 200px;\r\n    display: inline-flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n}\r\n.trashMenu button img {\r\n    margin-left: 12px;\r\n    padding: 8px;\r\n    width: 20px;\r\n    border: solid 1px #707070;\r\n}\r\nspan {\r\n    visibility: hidden;\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n  :global(.container.trash) span {\r\n    visibility: visible;\r\n  }\r\n.carousel {\r\n    width: var(--carousel-size);\r\n    height: 68px;\r\n    position: relative;\r\n    left: calc(var(--carousel-size) / -6);\r\n    display: grid;\r\n    grid-template-columns: repeat(7, 1fr);\r\n    place-items: center center;\r\n}\r\nbutton, input {\r\n    background: none;\r\n    border: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    height: 50px;\r\n    color: #ffffff;\r\n}\r\n.current {\r\n    height: 68px;\r\n    min-width: 150px;\r\n    font-size: 32px;\r\n    display: grid;\r\n    place-items: center center;\r\n}\r\n.active-dash-title {\r\n    display: inline-flex;\r\n    align-items: center;\r\n}\r\n.nav-button-2, .nav-button-4 {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-size: 24px;\r\n}\r\n.nav-button-1, .nav-button-5 {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-size: 18px;\r\n}\r\n.nav-button-0, .nav-button-6 {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n}\r\n\r\n.forward-animation .current, .forward-animation .nav-button-2, .forward-animation .nav-button-1, .backward-animation .current, .backward-animation .nav-button-4, .backward-animation .nav-button-5 {\r\n    animation: shrink var(--animation-speed) var(--animation-curve) 0s 1 forwards;\r\n}\r\n@keyframes shrink {\r\n    from { transform: scale(1) }\r\n    to { transform: scale(0.75) }\r\n}\r\n\r\n.forward-animation .nav-button-4, .forward-animation .nav-button-5, .forward-animation .nav-button-6, .backward-animation .nav-button-2, .backward-animation .nav-button-1, .backward-animation .nav-button-0 {\r\n    animation: grow var(--animation-speed) var(--animation-curve) 0s 1 forwards;\r\n}\r\n@keyframes grow {\r\n    from { transform: scale(1) }\r\n    to { transform: scale(1.32) }\r\n}\r\n\r\n.forward-animation {\r\n    animation: forward var(--animation-speed) var(--animation-curve) 0s 1 forwards;\r\n}\r\n@keyframes forward {\r\n    from { transform: translateX(0%) }\r\n    to { transform: translateX(-14.2%) }\r\n}\r\n.backward-animation {\r\n    animation: backward var(--animation-speed) var(--animation-curve) 0s 1 forwards;\r\n}\r\n@keyframes backward {\r\n    from { transform: translateX(0%) }\r\n    to { transform: translateX(14.2%) }\r\n}\r\n\r\n@media only screen and (max-width: 768px) {\r\n    nav {\r\n        width: 110%;\r\n        margin-left: -5%;  \r\n        grid-template-areas: \r\n        \". left . trash . add . right .\"\r\n        \"bar bar bar bar bar bar bar bar bar\";\r\n        row-gap: 24px;\r\n        grid-template-rows: 70px 70px auto;\r\n        margin-bottom: 70px;\r\n    }\r\n  \r\n}\r\n@media only screen and (max-width: 620px) { \r\n    .carousel {\r\n        width: 300%;\r\n        left: -100%;\r\n    }\r\n\r\n}\r\n</style>",
    "<script>\r\n  import { dashboards, _activeDashIndex, getWidget, setWidgetSizeAndPos, removeWidgetSizeAndPos } from \"../dataStore\";\r\n  import { writable } from 'svelte/store';\r\n  import { onMount } from 'svelte';\r\n  import Widget from \"./widgets/Widget.svelte\";\r\n  import Grid from \"svelte-grid\";\r\n  import gridHelp from \"svelte-grid/build/helper/index.mjs\";\r\n\r\n  export let clearWidgets = false;\r\n  const findSpaceForAll = false;\r\n  const approxColumnSizePx = 50;\r\n \r\n  $: _widgetsCount = dashboards[$_activeDashIndex] ? dashboards[$_activeDashIndex]._widgetsCount : writable(0); // fallback for no dashboards\r\n  let widgets = [];\r\n  let itemsArr = [];\r\n  let prevDashIndex = $_activeDashIndex;\r\n  $: cols = 0;\r\n  $: {\r\n    if ($_widgetsCount !== widgets.length || $_activeDashIndex !== prevDashIndex) {\r\n      prevDashIndex = $_activeDashIndex;\r\n      widgets = Array.from(dashboards[$_activeDashIndex].widgets.keys());\r\n      itemsArr = generateGridItems(widgets, cols);\r\n    }\r\n  } \r\n  $: {\r\n    if (clearWidgets) {\r\n      itemsArr = [];\r\n    }\r\n  }\r\n\r\n  let fillEmpty = false;\r\n  const generateGridItems = (widgets, cols) => {\r\n    let arr = [];\r\n    widgets.forEach((ref, i) => {\r\n      const widget = getWidget(ref);\r\n      let {w, h, x, y} = widget.sizeAndPos[getClosestStoredColMatch(widget.sizeAndPos)];\r\n      if (w > cols) {\r\n        w = cols;\r\n        fillEmpty = true;\r\n      }\r\n      else {\r\n        fillEmpty = false;\r\n      }\r\n      let newItem = gridHelp.item({w, h, x, y, id: ref});\r\n      if (x+w > cols || findSpaceForAll) {\r\n        newItem = {...newItem, ...gridHelp.findSpaceForItem(newItem, arr, cols)};\r\n      }\r\n      arr = gridHelp.appendItem(newItem, arr, cols);\r\n    });\r\n    return centerGridItems(arr);\r\n  };\r\n\r\n  const handleWindowResize = () => {\r\n    cols = getNOfCols();\r\n    itemsArr = generateGridItems(widgets, cols);\r\n  }\r\n\r\n  let prevItemsLookup = {};\r\n  const handleAdjust = function storeWidgetSizeAndPos() {\r\n    const changedItems = itemsArr.filter(item => !prevItemsLookup[item.id] || !isSameSizeAndPos(item, prevItemsLookup[item.id]));\r\n    if (changedItems.length > 0) {\r\n      const highestColumnInUse = getHighestColumnInUse(itemsArr);\r\n      changedItems.forEach(item => {\r\n        const {w, h, x, y} = item;\r\n        setWidgetSizeAndPos(highestColumnInUse, item.id, {w, h, x, y})\r\n        const currentClosestMatch = getClosestStoredColMatch(getWidget(item.id).sizeAndPos);\r\n        if (currentClosestMatch > highestColumnInUse) {\r\n          removeWidgetSizeAndPos(item.id, currentClosestMatch);\r\n        }\r\n      });\r\n      itemsArr.forEach(item => prevItemsLookup[item.id] = item);\r\n    }\r\n  }\r\n\r\n  const centerGridItems = arr => {\r\n    const highestXPos = getHighestColumnInUse(arr);\r\n    const halfDiff = Math.floor(((cols) - highestXPos) / 2);\r\n    return arr.map(item => { \r\n      return  {...item, ...{x: item.x + halfDiff}}\r\n    });\r\n  };\r\n  \r\n  onMount(() => {\r\n    itemsArr.forEach(item => prevItemsLookup[item.id] = item); \r\n  })\r\n\r\n  function getClosestStoredColMatch(sizeAndPos) {\r\n    const accendingDiffArr = Object.keys(sizeAndPos).sort((a,b) => {\r\n      const diffOfFirstVal = Math.abs(cols - a);\r\n      const diffOfSecondVal = Math.abs(cols - b);\r\n      return diffOfFirstVal - diffOfSecondVal\r\n    });\r\n    return accendingDiffArr[0]\r\n  } \r\n  function isSameSizeAndPos ({x, y, w, h}, {x: x2, y: y2, w: w2, h: h2}) {\r\n    return x === x2 && y === y2 && w === w2 && h === h2\r\n  }\r\n  function getHighestColumnInUse(arr) {\r\n    return Math.max(...arr.map(item => item.x + item.w))\r\n  }\r\n  function getNOfCols() {\r\n    const gridWidth = document.getElementById('gridContainer').clientWidth;\r\n    const nColsFitInWindow = Math.round(gridWidth/approxColumnSizePx);\r\n    return nColsFitInWindow - (nColsFitInWindow%2);\r\n  }\r\n</script>\r\n\r\n<div id=\"gridContainer\" class=\"grid-container\">\r\n  <Grid {fillEmpty} items={itemsArr} bind:items={itemsArr} cols={cols} let:item rowHeight={50} gap={20} on:adjust={handleAdjust} on:resize={handleWindowResize} on:mount={handleWindowResize}>\r\n      <Widget ref={item.id} />\r\n  </Grid>\r\n</div>\r\n\r\n<style>\r\n  .grid-container {\r\n    width: 100%;\r\n    height: 100%;\r\n    min-height: calc(100vh - 180px - 220px);\r\n    padding: 20px;\r\n    padding-bottom: 180px;\r\n    box-sizing: border-box;\r\n  }\r\n  :global(.svlt-grid-resizer) {\r\n    opacity: 0;\r\n  }\r\n</style>",
    "\r\n\r\n<footer id=\"footer\">\r\n    <img src=\"/images/logo.svg\" alt=\"Dashy\" />\r\n    <a href=\"https://github.com/chingu-voyages/v16-geckos-team-02\">\r\n        <div>about</div>\r\n        <div class=\"v16\">v16<br/>-geckos-<br/>02</div>\r\n        <div><span>GitHub</span><br/>repo</div>\r\n    </a>\r\n</footer>\r\n\r\n<style>\r\n    footer {\r\n        width: 100%;\r\n        height: 220px;\r\n        display: grid;\r\n        place-items: center center;\r\n        background: #ACACAC;\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n    a {\r\n        display: grid;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        place-items: center center;\r\n        color: #3A3A3A;\r\n        width: 300px;\r\n        max-width: 100vw;\r\n        text-align: center;\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        text-decoration: underline;\r\n    }\r\n    .v16 {\r\n        font-size: 16px;\r\n    }\r\n    span {\r\n        font-size: 11px;\r\n    }\r\n</style>",
    "<script>\r\n  import { addWidget } from '../dataStore.js';\r\n  import { onMount } from 'svelte';\r\n  import Add from './buttons/Add.svelte';\r\n  import Trash from './buttons/Trash.svelte';\r\n  import Toggler from '../utils/toggler.js';\r\n\r\n  let menuIsOpen = false;\r\n  const menu = new Toggler(state => menuIsOpen = state);\r\n  let trashActive = false;\r\n  const toggleTrash = () => {trashActive = !trashActive};\r\n  const add = type => {\r\n    addWidget(type);\r\n  };\r\n\r\n  let isAtBottom = false;\r\n\r\n  onMount(() => {\r\n    let observer = new IntersectionObserver(entries => {\r\n      console.log(entries[0])\r\n      if (entries[0].isIntersecting) {\r\n        document.body.classList.add(\"header-not-at-top\");\r\n        isAtBottom = true;\r\n      } else {\r\n        document.body.classList.remove(\"header-not-at-top\");\r\n        isAtBottom = false;\r\n      }\r\n    }, );\r\n    let footer = document.querySelector('#footer');\r\n    observer.observe(footer); \r\n    return () => observer.unobserve(footer); \r\n  });\r\n</script>\r\n  \r\n  <nav class=\"{isAtBottom ? 'bottom' : ''}\">\r\n    <Trash active={trashActive} on:trash={toggleTrash} on:trash /> <!-- the 2nd on:trash is to pass the event out to App -->\r\n      {#if menuIsOpen}\r\n        <img class=\"cancel\" src=\"/images/cancelIcon.svg\" alt=\"x\" />\r\n        <div class=\"menu\">\r\n          <button on:click={() => add('Sticky')}>\r\n            <h3>Sticky</h3> \r\n            <img src=\"/images/addIcon.svg\" alt=\"+\" />\r\n          </button>\r\n        </div>\r\n      {/if}\r\n    <h2>Widgets</h2>\r\n    <Add active={menuIsOpen} on:add={menu.toggle} />\r\n  </nav>\r\n  \r\n<style>\r\n  nav {\r\n    position: fixed;\r\n    bottom: 5vh;\r\n    right: 5vh;\r\n    z-index: 100;\r\n    max-width: 300px;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr 5fr 1fr;\r\n    grid-template-rows: auto auto 70px;\r\n    grid-template-areas: \r\n      \". . cancel\"\r\n      \". menu menu\"\r\n      \"trash title add\";\r\n    align-items: center;\r\n  }\r\n  @media only screen and (min-width: 780px) {\r\n    nav {\r\n      right: calc(15vw - 78px - 39px);\r\n    }\r\n  }\r\n  nav.bottom {\r\n    position: absolute;\r\n  }\r\n  .menu {\r\n    grid-area: menu;\r\n    border-radius: 12px;\r\n    background: #ACACAC;\r\n  }\r\n  .cancel {\r\n    grid-area: cancel;\r\n    place-self: center end;\r\n  }\r\n  button {\r\n    width: 100%;\r\n    display: inline-flex;\r\n    flex-flow: row nowrap;\r\n    align-items: center;\r\n    background: none;\r\n    border: none;\r\n    padding: 8px;\r\n    padding-right: 9px;\r\n    margin: 0;\r\n  }\r\n  h3 {\r\n    width: 100%;\r\n    font-size: 32px;\r\n    font-weight: 300;\r\n    margin: 0;\r\n    font-family: 'Play', sans-serif;\r\n    color: #ffffff;\r\n    text-align: left;\r\n    margin-left: 14px;\r\n  }\r\n  h2 {\r\n    grid-area: title;\r\n    display: inline-grid;\r\n    place-items: center center;\r\n    height: 100%;\r\n    background: #ACACAC;\r\n    font-size: 32px;\r\n    font-weight: 300;\r\n    margin: 0;\r\n    width:120%;\r\n    margin-left: -10%;\r\n  }\r\n</style>",
    "<style>\n  :global(body) {\n    overflow: scroll;\n  }\n\n .svlt-grid-container {\n  position: relative;\n}\n\n.svlt-grid-item {\n  touch-action:none;\n  position: absolute;\n}\n\n.svlt-grid-shadow {\n  position: absolute;\n}\n\n\n.svlt-grid-resizer {\n  user-select: none;\n  width: 20px;\n  height: 20px; \n  position:absolute; \n  right: 0; \n  bottom: 0; \n  cursor: se-resize; \n}\n\n.svlt-grid-resizer::after {\n  content: \"\";\n  position: absolute;\n  right: 3px;\n  bottom: 3px;\n  width: 5px;\n  height: 5px;\n  border-right: 2px solid rgba(0, 0, 0, 0.4);\n  border-bottom: 2px solid rgba(0, 0, 0, 0.4);\n}\n</style>\n\n<svelte:window on:resize={ debounce(onResize,300) } />\n\n<div class:svlt-grid-transition={!focuesdItem} class=svlt-grid-container bind:this={container} style=\"height: {ch}px\">\n  {#each items as item, i (item.id)}\n\n    <div on:mousedown={item.draggable ? dragOnMouseDown.bind(this, item.id) : null}\n        on:touchstart={item.draggable ? dragOnMouseDown.bind(this, item.id) : null}\n        class=svlt-grid-item style=\"{useTransform ? `transform: translate(${item.drag.dragging ? item.drag.left : (item.x * xPerPx) + gap}px, ${item.drag.dragging ? item.drag.top : (item.y * yPerPx + gap)}px);` : ''};\n        {!useTransform ? `top: ${item.drag.dragging ? item.drag.top : (item.y * yPerPx) + gap}px` : ''};\n        {!useTransform ? `left: ${item.drag.dragging ? item.drag.left : (item.x * xPerPx) + gap}px` : ''};\n        width: {item.resize.resizing ? item.resize.width : ((item.w * xPerPx) - gap * 2) - (item.responsive.valueW*xPerPx)}px;\n        height: {item.resize.resizing ? item.resize.height : (item.h * yPerPx) - gap * 2}px;\n        z-index: {item.drag.dragging || item.resize.resizing ? 3 : 1};\n        opacity: {item.resize.resizing ? 0.5 : 1}\">\n\n          <slot {item} index={i}></slot>\n          {#if item.resizable}\n            <div class=svlt-grid-resizer \n          on:touchstart={resizeOnMouseDown.bind(this,item.id)} \n          on:mousedown={resizeOnMouseDown.bind(this,item.id)}\n          ></div>\n          {/if}\n        </div>\n\n\n  {/each}\n\n  {#if shadow.active}\n    <div class=svlt-grid-shadow style=\"{useTransform ? `transform: translate(${shadow.drag.dragging ? shadow.drag.left : (shadow.x * xPerPx) + gap}px, ${shadow.drag.dragging ? shadow.drag.top : (shadow.y * yPerPx + gap)}px);` : ''};\n        {!useTransform ? `top: ${shadow.drag.dragging ? shadow.drag.top : (shadow.y * yPerPx) + gap}px` : ''};\n        {!useTransform ? `left: ${shadow.drag.dragging ? shadow.drag.left : (shadow.x * xPerPx) + gap}px` : ''};\n    width:{((shadow.w * xPerPx) - gap * 2) - (shadow.responsive.valueW*xPerPx)}px;\n    height:{(shadow.h * yPerPx) - gap * 2}px;\"></div>\n  {/if}\n</div>\n\n<script>\nimport { onMount, beforeUpdate,createEventDispatcher } from \"svelte\";\n\nimport { resizeItems, getItemById, moveItem, findFreeSpaceForItem } from \"./utils/item.js\";\nimport { getContainerHeight } from \"./utils/container.js\";\nimport { debounce, getRowsCount, getColumnFromBreakpoints, getCordinates, getTranslate } from \"./utils/other.js\";\nimport { makeMatrixFromItemsIgnore } from \"./utils/matrix.js\";\n\nexport let useTransform = false;\nexport let items = [];\nexport let cols = 0;\nexport let dragDebounceMs = 350;\nexport let gap = 0;\nexport let rowHeight = 150;\nexport let breakpoints;\nexport let fillEmpty = true;\n\nlet container,\n  focuesdItem,\n  bound,\n  xPerPx,\n  currentItemIndex,\n  getComputedCols,\n  documentWidth,\n  resizeNoDynamicCalc,\n  yPerPx = rowHeight,\n  initCols = cols,\n  shadow = {\n    w: 0,\n    h: 0,\n    x: 0,\n    y: 0,\n    active: false,\n    id: null,\n    responsive: { valueW: 0 },\n    min: {},\n    max: {}\n  },\n  ch = getContainerHeight(items, yPerPx);\n\nconst dispatch = createEventDispatcher();\n\nconst getDocWidth = () => document.documentElement.clientWidth\n\nfunction onResize() {\n\n  let w = document.documentElement.clientWidth\n\n  if(w !== documentWidth) {\n    documentWidth = w;\n    \n    bound = container.getBoundingClientRect();\n\n    let getCols = getColumnFromBreakpoints(breakpoints,w,cols,initCols)\n    \n    getComputedCols = getCols\n\n    xPerPx = bound.width / getCols\n\n    dispatch('resize', {\n      cols:getCols,\n      xPerPx,\n      yPerPx // same as rowHeight\n    });\n\n    if(breakpoints) {\n    \titems = resizeItems(items, getCols);\n    }\n\n  } \n\n}\n\n\nonMount(() => {\n  bound = container.getBoundingClientRect();\n\n  let getCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n  \n  getComputedCols = getCols\n\n  documentWidth = document.documentElement.clientWidth\n\n  if(breakpoints) {\n    items = resizeItems(items, getCols)\n  }\n\n  xPerPx = bound.width / getCols\n\n  dispatch('mount', {\n    cols: getCols,\n    xPerPx,\n    yPerPx // same as rowHeight\n  })\n\n});\n\n// resize\n\nlet resizeStartX, resizeStartY, resizeStartWidth, resizeStartHeight;\n\nfunction resizeOnMouseDown(id, e) {\n  e.stopPropagation();\n\n  let {pageX,pageY} = getCordinates(e)\n\n  const { item, index } = getItemById(id, items);\n\n  currentItemIndex = index;\n\n  focuesdItem = item;\n\n  cacheItem = {...item}\n\n  resizeNoDynamicCalc = item.h + item.y === getRowsCount(items);\n\n  shadow = {...shadow,...focuesdItem,...{active:true}}\n\n  resizeStartX = pageX - bound.x;\n  resizeStartY = pageY - bound.y;\n\n  resizeStartWidth = (item.w * xPerPx) - (gap * 2) - (focuesdItem.responsive.valueW * xPerPx);\n\n  resizeStartHeight = (item.h * yPerPx) - (gap * 2);\n\n  getComputedCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n\n  window.addEventListener(\"mousemove\", resizeOnMouseMove, false);\n  window.addEventListener(\"touchmove\", resizeOnMouseMove, false);\n\n  window.addEventListener(\"mouseup\", resizeOnMouseUp, false);\n  window.addEventListener(\"touchend\", resizeOnMouseUp, false);\n}\n\nfunction resizeOnMouseMove(e) {\n\n  let {pageX,pageY}=getCordinates(e);\n\n  pageX = pageX - bound.x;\n  pageY = pageY - bound.y;\n\n  const height = resizeStartHeight + pageY - resizeStartY;\n  const width = resizeStartWidth + (pageX - resizeStartX)\n\n  const {responsive:{valueW} } = focuesdItem;\n\n  let wRes = Math.round(width / xPerPx) + valueW\n\n  const {h:minHeight=1,w:minWidth=1} = focuesdItem.min\n  const {h:maxHeight,w:maxWidth = ((getComputedCols - focuesdItem.x)+valueW)} = focuesdItem.max\n\n  wRes = Math.min(Math.max(wRes,minWidth),maxWidth)/* min max*/\n\n  let hRes = Math.round(height/yPerPx)\n  if(maxHeight) {\n    hRes = Math.min(hRes,maxHeight)\n  }\n  hRes = Math.max(hRes,minHeight)\n\n  shadow = {...shadow, ...{w:wRes, h:hRes}} \n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    resize: {\n      resizing:true,\n      width,\n      height\n    },\n    w:wRes,\n    h:hRes\n  }\n\n  if (!resizeNoDynamicCalc) {\n    debounceRecalculateGridPosition();\n  }\n}\n\nfunction resizeOnMouseUp(e) {\n  e.stopPropagation();\n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    resize:{\n      resizing:false,\n      width:0,\n      height:0\n    }\n  }\n\n  window.removeEventListener(\"mousemove\", resizeOnMouseMove, false);\n  window.removeEventListener(\"touchmove\", resizeOnMouseMove, false);\n\n  window.removeEventListener(\"mouseup\", resizeOnMouseUp, false);\n  window.removeEventListener(\"touchend\", resizeOnMouseUp, false);\n\n  shadow = {...shadow, ... {w:0,h:0,x:0,y:0,active:false,id:null,responsive:{valueW:0}}, min:{},max:{} } \n\n  recalculateGridPosition(\"up\");\n\n  focuesdItem = undefined;\n  resizeNoDynamicCalc = false;\n}\n\n// drag\nlet dragX = 0,\n  dragY = 0;\n\nconst debounceRecalculateGridPosition = debounce(recalculateGridPosition, dragDebounceMs);\n\nlet cacheItem = {};\n\nfunction dragOnMouseDown(id, e) {\n  e.stopPropagation()\n  let {pageX,pageY} = getCordinates(e)\n\n  const { item, index } = getItemById(id, items);\n  \n  currentItemIndex = index;\n\n\n  focuesdItem = item;\n  cacheItem = {...item}\n  \n  shadow = { ...shadow, ...item, active: true }; \n\n  \n\n  let { currentTarget } = e;\n\n  let offsetLeft, offsetTop;\n\n  if(useTransform) {\n    const { x, y } = getTranslate(currentTarget.style.transform)\n    offsetLeft = x\n    offsetTop = y\n  } else {\n    offsetLeft = currentTarget.offsetLeft\n    offsetTop = currentTarget.offsetTop\n  }\n\n  pageX = pageX - bound.x;\n  pageY = pageY - bound.y;\n\n  dragX = pageX - offsetLeft;\n\n  dragY = pageY - offsetTop;\n\n  getComputedCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n\n\n  if (item) {\n    window.addEventListener(\"mousemove\", dragOnMove, false);\n    window.addEventListener(\"touchmove\", dragOnMove, false);\n\n    window.addEventListener(\"mouseup\", dragOnMouseUp, false);\n    window.addEventListener(\"touchend\", dragOnMouseUp, false);\n  } else {\n    console.warn(\"Can not get item\");\n  }\n}\n\n\nfunction dragOnMove(e) {\n  e.stopPropagation()\n\n  let {pageX,pageY} = getCordinates(e)\n\n  const y = pageY - bound.y;\n  const x = pageX - bound.x;\n\n  let xRes = Math.round((x - dragX) / xPerPx);\n  let yRes = Math.round((y - dragY) / yPerPx);\n\n  xRes = Math.max(Math.min(xRes,getComputedCols-(focuesdItem.w- focuesdItem.responsive.valueW)),0)\n\n  yRes = Math.max(yRes, 0);\n\n  let assignItem = items[currentItemIndex];\n\n  items[currentItemIndex] = {\n    ...assignItem,\n    drag:{\n      dragging:true,\n      top:y - dragY,\n      left:x - dragX\n    },\n    x:xRes,\n    y:yRes\n  }\n\n  shadow = {...shadow, ...{x:xRes,y:yRes}}\n\n  debounceRecalculateGridPosition();\n}\n\nfunction dragOnMouseUp(e) {\n  window.removeEventListener(\"mousemove\", dragOnMove, false);\n  window.removeEventListener(\"touchmove\", dragOnMove, false);\n\n  window.removeEventListener(\"mouseup\", dragOnMouseUp, false);\n  window.removeEventListener(\"touchend\", dragOnMouseUp, false);\n\n  let assignItem = items[currentItemIndex]\n  items[currentItemIndex] = {\n    ...assignItem,\n    drag: {\n      dragging: false,\n      top: 0,\n      left: 0\n    },\n  }\n\n  dragX = 0;\n  dragY = 0;\n\n  shadow = {...shadow, ...{w:0,h:0,x:0,y:0,active:false,id:null}} \n  \n  recalculateGridPosition(\"up\");\n\n  focuesdItem = undefined;\n}\n\n\n// Will work on this, need to make code cleaner\nfunction recalculateGridPosition(action) {\n  const dragItem = items[currentItemIndex];\n\n  let getCols = getColumnFromBreakpoints(breakpoints, getDocWidth(), cols, initCols)\n  let result = moveItem(dragItem, items, getCols, cacheItem);\n\n  if(fillEmpty) {\n\n    result.forEach(value => {\n      if (value.id !== dragItem.id) {\n        result = result.map($val =>\n          $val.id === value.id\n            ? {\n                ...$val,\n                ...findFreeSpaceForItem(\n                  makeMatrixFromItemsIgnore(result, [value.id], getRowsCount(result), getCols),\n                  value,\n                  result\n                )\n              }\n            : $val\n        );\n      }\n    });\n  }\n\n  items = result\n\n  dispatch('adjust', {\n    focuesdItem: dragItem\n  });\n\n}\n\nbeforeUpdate(() => {\n  if (!focuesdItem) {\n    ch = getContainerHeight(items, yPerPx);\n    if(cols !== initCols) {\n      if(bound) {\n        xPerPx = bound.width/cols\n        initCols = cols\n      }\n    }\n  }\n});\n\n\n</script>\n",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n    const right = () => {\r\n        dispatch('right');\r\n    } \r\n</script>\r\n\r\n<button on:click={right}>\r\n    <img src=\"/images/arrowRightIcon.svg\" alt=\"next\" />\r\n</button>\r\n\r\n<style>\r\n button {\r\n    grid-area: right;\r\n    min-height: 100%;\r\n    width: 68px;\r\n    height: 68px;\r\n    background: none;\r\n    border: none;\r\n}\r\n</style>",
    "<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    const dispatch = createEventDispatcher();\r\n    const left = () => {\r\n        dispatch('left');\r\n    } \r\n</script>\r\n\r\n<button on:click={left}>\r\n    <img src=\"/images/arrowRightIcon.svg\" alt=\"prev\" />\r\n</button>\r\n\r\n<style>\r\nbutton {\r\n    grid-area: left;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    width: 68px;\r\n    height: 68px;\r\n    background: none;\r\n    border: none;\r\n    transform: rotate(180deg);\r\n}\r\n</style>",
    "\r\n<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    export let active;\r\n    const dispatch = createEventDispatcher();\r\n    const add = () => dispatch('add');\r\n</script>\r\n\r\n<button class=\"{active ? 'active' : ''}\" on:click={add}>\r\n    <img src=\"/images/addIcon.svg\" alt=\"+\" />\r\n</button>\r\n\r\n<style>\r\n\tbutton {\r\n        grid-area: add;\r\n        width: 70px;\r\n        height: 70px;\r\n        border: solid 5px #ACACAC;\r\n        border-radius: 12px;\r\n        margin: 0;\r\n        background: none;\r\n        background: #ffffff;\r\n        z-index: 300;\r\n    }\r\n    .active {\r\n        background: #707070;\r\n    }\r\n</style>",
    "\r\n<script>\r\n    import { createEventDispatcher } from 'svelte';\r\n    export let active = false;\r\n    export let cancelPos = 'top';\r\n    export let className = '';\r\n    const dispatch = createEventDispatcher();\r\n    const trash = () => {\r\n        dispatch('trash', {\r\n\t\t\tactive: !active // not sure why this inverts\r\n\t\t});\r\n    } \r\n</script>\r\n\r\n\r\n<button class=\"{active ? 'active ' : ''}{className}\" on:click={trash}>\r\n    {#if active}\r\n        <img class=\"cancel {cancelPos}\" on:click={trash} src=\"/images/cancelIcon.svg\" alt=\"x\" />\r\n    {/if}\r\n    <img src=\"/images/trashIcon.svg\" alt=\"-\" />\r\n</button>\r\n\r\n<style>\r\n\tbutton {\r\n        position: relative;\r\n        grid-area: trash;\r\n        width: 70px;\r\n        height: 70px;\r\n        border: solid 5px #ACACAC;\r\n        border-radius: 12px;\r\n        margin: 0;\r\n        background: #ffffff;\r\n        z-index: 300;\r\n        font-size: 16px;\r\n    }\r\n    .small {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n    img {\r\n        height: 100%;\r\n        width: 100%;\r\n    }\r\n    .active {\r\n        background: #707070;\r\n    }\r\n    .cancel {\r\n        position: absolute;\r\n        z-index: 300;\r\n        width: 24px;\r\n        height: 31px;\r\n    }\r\n    .cancel.top {\r\n        top: -65%;\r\n        left: 0;\r\n    }\r\n    .cancel.right {\r\n        transform: rotate(90deg);\r\n        left: 125%;\r\n        top: 0%;\r\n    }\r\n    \r\n</style>",
    "<script>\r\n    import { getWidget, removeWidget} from '../../dataStore';\r\n  \timport { quintOut } from 'svelte/easing';\r\n    import Sticky from './Sticky.svelte';\r\n    import Trash from '../buttons/Trash.svelte';\r\n    import handleEnter from '../../utils/handleEnter';\r\n    export let ref;\r\n    let {_title, _data, type} = getWidget(ref);\r\n    let editingTitle = false;\r\n    const removeSelf = () => {\r\n      removeWidget(ref);\r\n    }\r\n\r\n    function flip(node, { delay = 0, duration = 400, easing: easing$1 = easing.cubicOut }) {\r\n      const style = getComputedStyle(node);\r\n      const opacity = +style.opacity;\r\n      const width = parseFloat(style.width);\r\n      return {\r\n          delay,\r\n          duration,\r\n          easing: easing$1,\r\n          css: t => `overflow: hidden;` +\r\n              `opacity: ${Math.min(t * 20, 1) * opacity};` +\r\n              `transform: rotateY(${(t - 1) * 90}deg)`\r\n      };\r\n    }\r\n</script>\r\n\r\n<div transition:flip=\"{{duration: 300, easing: quintOut }}\">\r\n  {#if editingTitle}\r\n    <input bind:value={$_title} on:blur={() => editingTitle = false} on:keypress={handleEnter} type=\"text\" autofocus />\r\n  {:else}\r\n    <h2 on:click={() => editingTitle = true}>{$_title}</h2>\r\n  {/if}\r\n  {#if type === 'Sticky'}\r\n      <Sticky {_data} />\r\n      {:else}\r\n      <div>{type} Widget type not yet implemented</div>\r\n  {/if}\r\n  <span><Trash on:trash={removeSelf} /></span>\r\n  <img class=\"resize-icon\" src=\"/images/resizeIcon.svg\" alt=\"-\" />\r\n</div>\r\n\r\n<style>\r\n  div {\r\n    position: relative;\r\n    display: grid;\r\n    place-items: start center;\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    padding: 12px;\r\n    box-sizing: border-box;\r\n    border: 1px solid #ACACAC;\r\n    box-shadow: #ACACAC 0 3px 6px;\r\n    color: #707070;\r\n  }\r\n  h2, input {\r\n    text-decoration: none;\r\n    color: #707070;\r\n    font-size: 32px;\r\n    padding: 0;\r\n    margin: 0;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    width: 100%;\r\n    min-height: 30px;\r\n    background: none;\r\n    font-weight: 400;\r\n    font-family: 'Courgette', cursive;\r\n  }\r\n  span {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    visibility: hidden;\r\n  }\r\n  :global(.trash) span {\r\n    visibility: visible;\r\n  }\r\n  .resize-icon {\r\n    position: absolute;\r\n    bottom: 0;\r\n    right: 0;\r\n  }\r\n  \r\n</style>\r\n",
    "<script>\r\n    import { getWidget } from '../../dataStore';\r\n    import { beforeUpdate } from 'svelte';\r\n    import Text from './stickyTypes/Text.svelte';\r\n    import detectInputType from '../../utils/detectInputType.js';\r\n    export let _data;\r\n    let type;\r\n    const Components = {\r\n        Text\r\n    }\r\n    let Component = Text;\r\n    let editing = $_data === '';\r\n    beforeUpdate(() => {\r\n        type = detectInputType($_data);\r\n        if (type) {\r\n            Component = Components[type];\r\n        }\r\n        else {\r\n            editing = true;\r\n        }\r\n\t});\r\n</script>\r\n\r\n{#if !editing}\r\n    <Component {_data} on:click={() => editing = true} />\r\n{:else}\r\n    \r\n    <textarea bind:value={$_data} on:blur={() => editing = false} />\r\n{/if}\r\n\r\n<style>\r\n    textarea {\r\n      width: 90%;\r\n      height: 100%;\r\n      font-family: 'Patrick Hand', cursive;\r\n      color: #707070;\r\n    }\r\n</style>",
    "\r\n<script>\r\n\timport toMarkdown from '../../../utils/toMarkdown.js';\r\n\timport { createEventDispatcher } from 'svelte';\r\n\texport let _data;\r\n\tconst dispatch = createEventDispatcher();\r\n    const click = () => {\r\n        dispatch('click');\r\n    } \r\n\tlet editing = $_data === '';\r\n\tconst disableEditIfNoFocus = () => { if (this !== document.activeElement) editing = false };\r\n</script>\r\n\r\n<article on:click={click}>{@html toMarkdown($_data)}</article>\r\n\r\n<style>\r\n\tarticle {\r\n\t\twidth: 90%;\r\n\t\theight: 100%;\r\n\t\tbackground: none;\r\n\t\tpadding: 0;\r\n\t\tmargin: 0;\r\n\t\twhite-space: pre-wrap;\r\n\t\tfont-family: 'Patrick Hand', cursive;\r\n\t\tcolor: #707070;\r\n\t}\r\n</style>"
  ],
  "names": [],
  "mappings": "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"
}